apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp  # the next part configures the POD within the deployment
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: nanajanashia/k8s-demo-app:v1.0
        ports:
        - containerPort: 3000
        env:
        - name: USER_NAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-user
        - name: USER_PWD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-password
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              name: mongo-config
              key: mongo-url
      nodeSelector:
        webapp: accept

---
apiVersion: v1
kind: Service # the service has is own IP within the cluster, and port. We need to bind this to the PODS and their ports.
metadata:
  name: webapp-service #this is the end point we will use to access the webapp deployment and thus the PODs. 
spec:
  type: NodePort
  selector:
    app: webapp #this is how the service knows to which PODs to forward the request it gets. This is the role of the selector
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000 # this is the port of the PODs that belong to the service.
      nodePort: 30100 #this is the port open @ node, for external access. Node IP/port give external access. nodePort ranges are defined in k8s 30000-32767
